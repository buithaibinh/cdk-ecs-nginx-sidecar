{
  "Resources": {
    "EcsApiStackCluster3A529525": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/Cluster/Resource"
      }
    },
    "EcsApiStackTaskRole69006BE9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Role that the api task definitions use to run the api code",
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/TaskRole/Resource"
      }
    },
    "EcsApiStackcdktaskdef7B739F04": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 0,
            "Essential": true,
            "Image": {
              "Fn::Sub": "057627104303.dkr.ecr.ap-southeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-057627104303-ap-southeast-1:201043e34d5ee38bf7bfe3376025ee4554127e81506ace17f4a528259bf21fcc"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsApiStackcdktaskdefnginxLogGroupD70F4ED8"
                },
                "awslogs-stream-prefix": "echo-http-req",
                "awslogs-region": "ap-southeast-1"
              }
            },
            "Name": "nginx",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          },
          {
            "Cpu": 0,
            "Essential": true,
            "Image": {
              "Fn::Sub": "057627104303.dkr.ecr.ap-southeast-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-057627104303-ap-southeast-1:572b52169f3102c868e05416a4f734c2d1186300ec8536c78a6a4b817b8a77ca"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsApiStackcdktaskdefbackendLogGroup33630B65"
                },
                "awslogs-stream-prefix": "echo-api-req",
                "awslogs-region": "ap-southeast-1"
              }
            },
            "Name": "backend",
            "PortMappings": [
              {
                "ContainerPort": 8000,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsApiStackcdktaskdefExecutionRole082BF729",
            "Arn"
          ]
        },
        "Family": "MyAppNameEcsApiStackcdktaskdef848BEAF8",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsApiStackTaskRole69006BE9",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/cdk-taskdef/Resource"
      }
    },
    "EcsApiStackcdktaskdefnginxLogGroupD70F4ED8": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 30,
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/cdk-taskdef/nginx/LogGroup/Resource"
      }
    },
    "EcsApiStackcdktaskdefExecutionRole082BF729": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/cdk-taskdef/ExecutionRole/Resource"
      }
    },
    "EcsApiStackcdktaskdefExecutionRoleDefaultPolicy6F86FA69": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:ap-southeast-1:057627104303:repository/cdk-hnb659fds-container-assets-057627104303-ap-southeast-1"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsApiStackcdktaskdefbackendLogGroup33630B65",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "EcsApiStackcdktaskdefnginxLogGroupD70F4ED8",
                    "Arn"
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EcsApiStackcdktaskdefExecutionRoleDefaultPolicy6F86FA69",
        "Roles": [
          {
            "Ref": "EcsApiStackcdktaskdefExecutionRole082BF729"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/cdk-taskdef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "EcsApiStackcdktaskdefbackendLogGroup33630B65": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 30,
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/cdk-taskdef/backend/LogGroup/Resource"
      }
    },
    "EcsApiStackApiEcsServiceLB5D1EA71F": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EcsApiStackApiEcsServiceLBSecurityGroup1D0C0C55",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          "subnet-0da28f71be364124a",
          "subnet-09fd8ad5ecff27fed",
          "subnet-06867a033d2068ada"
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/LB/Resource"
      }
    },
    "EcsApiStackApiEcsServiceLBSecurityGroup1D0C0C55": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB MyAppNameEcsApiStackApiEcsServiceLB1F1F5C56",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "VpcId": "vpc-0013031c6fe54b6a8"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/LB/SecurityGroup/Resource"
      }
    },
    "EcsApiStackApiEcsServiceLBSecurityGrouptoMyAppNameEcsApiStackApiEcsServiceSecurityGroup9642FFB780B89E7A15": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "EcsApiStackApiEcsServiceLBSecurityGroup1D0C0C55",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsApiStackApiEcsServiceSecurityGroupC8C8AD18",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/LB/SecurityGroup/to MyAppNameEcsApiStackApiEcsServiceSecurityGroup9642FFB7:80"
      }
    },
    "EcsApiStackApiEcsServiceLBPublicListenerC4CAA0D2": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsApiStackApiEcsServiceLBPublicListenerECSGroupB78E7B0A"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "EcsApiStackApiEcsServiceLB5D1EA71F"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/LB/PublicListener/Resource"
      }
    },
    "EcsApiStackApiEcsServiceLBPublicListenerECSGroupB78E7B0A": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/healthz",
        "HealthCheckPort": "traffic-port",
        "HealthyThresholdCount": 5,
        "Matcher": {
          "HttpCode": "200,301,302"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          }
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": "vpc-0013031c6fe54b6a8"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "EcsApiStackApiEcsService9B4B669B": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "EcsApiStackCluster3A529525"
        },
        "DeploymentConfiguration": {
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": true
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "nginx",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "EcsApiStackApiEcsServiceLBPublicListenerECSGroupB78E7B0A"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "EcsApiStackApiEcsServiceSecurityGroupC8C8AD18",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              "subnet-0da28f71be364124a",
              "subnet-09fd8ad5ecff27fed",
              "subnet-06867a033d2068ada"
            ]
          }
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "TaskDefinition": {
          "Ref": "EcsApiStackcdktaskdef7B739F04"
        }
      },
      "DependsOn": [
        "EcsApiStackApiEcsServiceLBPublicListenerECSGroupB78E7B0A",
        "EcsApiStackApiEcsServiceLBPublicListenerC4CAA0D2"
      ],
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/Service"
      }
    },
    "EcsApiStackApiEcsServiceSecurityGroupC8C8AD18": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MyAppName/EcsApiStack/ApiEcsService/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "MyAppName"
          }
        ],
        "VpcId": "vpc-0013031c6fe54b6a8"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/SecurityGroup/Resource"
      }
    },
    "EcsApiStackApiEcsServiceSecurityGroupfromMyAppNameEcsApiStackApiEcsServiceLBSecurityGroup4FEB5E4180FD172413": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsApiStackApiEcsServiceSecurityGroupC8C8AD18",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EcsApiStackApiEcsServiceLBSecurityGroup1D0C0C55",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/SecurityGroup/from MyAppNameEcsApiStackApiEcsServiceLBSecurityGroup4FEB5E41:80"
      }
    },
    "EcsApiStackApiEcsServiceTaskCountTarget0E31AB9F": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 1,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "EcsApiStackCluster3A529525"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "EcsApiStackApiEcsService9B4B669B",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::057627104303:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/TaskCount/Target/Resource"
      }
    },
    "EcsApiStackApiEcsServiceTaskCountTargetCpuScaling14F0C3BC": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "MyAppNameEcsApiStackApiEcsServiceTaskCountTargetCpuScaling2C528B7B",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "EcsApiStackApiEcsServiceTaskCountTarget0E31AB9F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "TargetValue": 90
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/TaskCount/Target/CpuScaling/Resource"
      }
    },
    "EcsApiStackApiEcsServiceTaskCountTargetMemoryScaling1575C024": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "MyAppNameEcsApiStackApiEcsServiceTaskCountTargetMemoryScalingBD004A7D",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "EcsApiStackApiEcsServiceTaskCountTarget0E31AB9F"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
          },
          "TargetValue": 90
        }
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/EcsApiStack/ApiEcsService/Service/TaskCount/Target/MemoryScaling/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LbuHbKBp2pWPbUJC2tRyRyY1VWhIqjhlQlX/+5yWQmHTTrGfn/3s2BM5fpVPD/BNI5UVI6O3sk4DqEIkSK7yCgXHNjUqkvXcVBTQi/nO9uY7+BwCroGKBe601UE7Gwn3iLMBtEU/wM65KfqjZh1O6s1UgYGtacvOXWVDIzQcZJ040/La98sZrU7R7axGoPIbIMJAcuFUgX55gBynEYkxmWDpSAfnTzMgFMblPNTK5R/eVWUs1NuxFG1KCDyiJTktSxaA2PTKQTbj5qzC7K5/NEBBK8OMbcvQNj9OZP13tu/0Bv6Qp/lz7ZnT24P4mpUxXNoeuLFz1kxRVV6H04XyP/CWeyT6BS9tizcCrtJQBUe8Hh6OZS57ig20+bdI96w9HxQnpF3edXE3QNOIdlV8fjmDMf5ZhbJq6/bX2AjrMpR7ejyOX+T4mW93T1qPPB+JPqBMuvcH7amHYdcCAAA="
      },
      "Metadata": {
        "aws:cdk:path": "MyAppName/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "EcsApiStackApiEcsServiceLoadBalancerDNSC96CA306": {
      "Value": {
        "Fn::GetAtt": [
          "EcsApiStackApiEcsServiceLB5D1EA71F",
          "DNSName"
        ]
      }
    },
    "EcsApiStackApiEcsServiceServiceURLB6630BC4": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "EcsApiStackApiEcsServiceLB5D1EA71F",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}